import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv('TELEGRAM_TOKEN')
if not TOKEN:
    raise ValueError("TELEGRAM_TOKEN not set in environment variables")

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(commands=['start'])
async def send_welcome(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ TalkBubblesBot. –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–≤–µ—á—É.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø—Ä–æ—Å—Ç–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫: —ç—Ö–æ —Å "–ø—É–∑—ã—Ä–µ–º")
@dp.message()
async def echo_message(message: Message):
    text = message.text
    response = f"üó®Ô∏è –¢—ã —Å–∫–∞–∑–∞–ª: {text}. –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! üó®Ô∏è"
    await message.reply(response)

# Webhook setup
async def on_startup(bot: Bot) -> None:
    webhook_url = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/webhook"  # Render –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç hostname; –ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à URL
    await bot.set_webhook(webhook_url)

if __name__ == '__main__':
    app = web.Application()
    webhook_requests_handler = SimpleRequestHandler(dispatcher=dp, bot=bot)
    webhook_requests_handler.register(app, path="/webhook")
    setup_application(app, dp, bot=bot)

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ $PORT
    port = int(os.environ.get('PORT', 8080))
    web.run_app(app, host='0.0.0.0', port=port)
